(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{335:function(t,s,a){"use strict";a.r(s);var r=a(14),n=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-核心文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-核心文件"}},[t._v("#")]),t._v(" 1. 核心文件")]),t._v(" "),s("h3",{attrs:{id:"_1-1-核心文件位置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-核心文件位置"}},[t._v("#")]),t._v(" 1.1 核心文件位置")]),t._v(" "),s("p",[s("code",[t._v("BASEPATH . 'core/CodeIgniter.php'")]),t._v("。")]),t._v(" "),s("blockquote",[s("p",[t._v("上一节说过全局目录常量 "),s("code",[t._v("BASEPATH")]),t._v(" 表示 "),s("code",[t._v("xxx/system/")]),t._v("这个路径，因此核心文件就位于 "),s("code",[t._v("xxx/system/core/CodeIgniter.php")]),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"_1-2-核心文件的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-核心文件的作用"}},[t._v("#")]),t._v(" 1.2 核心文件的作用")]),t._v(" "),s("p",[t._v("所谓核心文件，就是整个框架启动、应用依赖、路由分发、核心功能等等，所有运行应用最最基础和最最核心的功能都需要在这里实现。"),s("br"),t._v("\n其他的扩展、开发，最终就是基于核心文件中支持的功能来实现的。")]),t._v(" "),s("h2",{attrs:{id:"_2-核心功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-核心功能"}},[t._v("#")]),t._v(" 2. 核心功能")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("如下的核心功能，大部分都会单独做章节学习。")])]),t._v(" "),s("h3",{attrs:{id:"_2-1-定义版本号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-定义版本号"}},[t._v("#")]),t._v(" 2.1 定义版本号")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'CI_VERSION'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'xxx'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-2-加载配置常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-加载配置常量"}},[t._v("#")]),t._v(" 2.2 加载配置常量")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("p",[t._v("这里又要涉及 "),s("code",[t._v("PHP")]),t._v(" 的一个知识点：“常量一旦定义，就无法修改或重复定义”，那么加载的常量如果在后面的配置文件中重复定义或修改，则是不生效的，开发环境会报错，其他环境不会（见第一节环境限制错误处理）")])]),t._v(" "),s("p",[s("strong",[t._v("常量配置文件加载规则：")]),s("br"),t._v("\n既然常量不能复写和重定义，那么先加载的常量生效，后面加载的重复的则不生效。那么框架源码中是如下加载顺序：")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file_exists")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("APPPATH")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'config/'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ENVIRONMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'/constants.php'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require_once")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("APPPATH")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'config/'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ENVIRONMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'/constants.php'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require_once")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("APPPATH")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'config/constants.php'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("可以得到以下结论：")]),t._v(" "),s("ul",[s("li",[t._v("常量配置文件名为 "),s("code",[t._v("constants.php")])]),t._v(" "),s("li",[t._v("常量配置文件位于：\n"),s("ul",[s("li",[t._v("环境级别常量配置："),s("code",[t._v("APPPTH . 'config/' . ENVIRONMENT . 'constants.php'")])]),t._v(" "),s("li",[t._v("系统级别常量配置："),s("code",[t._v("APPPTH . 'config/constants.php'")])])])]),t._v(" "),s("li",[t._v("常量配置的优先级：环境级别常量 > 系统级别常量")])]),t._v(" "),s("p",[s("em",[t._v("不是说只能以上述方式定义常量，而是说“默认的”会以上述方式定义；当然我可以随便定义一个位置，随便创建一个文件，在其中定义常量，然后在应用中手动加载。")])]),t._v(" "),s("h3",{attrs:{id:"_2-3-加载系统函数库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-加载系统函数库"}},[t._v("#")]),t._v(" 2.3 加载系统函数库")]),t._v(" "),s("p",[t._v("所谓函数库，就是一些函数都声明在一个文件中，就是一个工具库而已。框架默认编写了一些功能函数，并在这里加载，则从这里开始之后任何地方都可以随意调用这些函数。"),s("br"),t._v("\n系统函数库位于："),s("code",[t._v("BASEPATH. 'core/Common.php'")]),t._v("。\n"),s("em",[t._v("会序也会有扩展、新增函数库的方法。")])]),t._v(" "),s("h3",{attrs:{id:"_2-4-自定义异常错误处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-自定义异常错误处理"}},[t._v("#")]),t._v(" 2.4 自定义异常错误处理")]),t._v(" "),s("p",[t._v("会有专门的章节学习，见"),s("a",{attrs:{href:"/php/ci3/custom_exception_error"}},[t._v("自定义异常错误处理")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"_2-5-composer-处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-composer-处理"}},[t._v("#")]),t._v(" 2.5 "),s("code",[t._v("composer")]),t._v(" 处理")]),t._v(" "),s("p",[t._v("会有专门的章节学习，见"),s("a",{attrs:{href:"/php/ci3/composer"}},[t._v("composer自动加载")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"_2-6-加载类库-load-class-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-加载类库-load-class-函数"}},[t._v("#")]),t._v(" 2.6 加载类库 "),s("code",[t._v("load_class()")]),t._v("函数")]),t._v(" "),s("p",[t._v("会有专门的章节学习，见"),s("a",{attrs:{href:"/php/ci3/loader"}},[t._v("加载类库")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"_2-7-基准测试类库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-基准测试类库"}},[t._v("#")]),t._v(" 2.7 基准测试类库")]),t._v(" "),s("p",[t._v("会有专门的章节学习，见"),s("a",{attrs:{href:"/php/ci3/benchmark_lib"}},[t._v("基准测试类库")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"_2-8-钩子类库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-钩子类库"}},[t._v("#")]),t._v(" 2.8 钩子类库")]),t._v(" "),s("p",[t._v("会有专门的章节学习，见"),s("a",{attrs:{href:"/php/ci3/hook_lib"}},[t._v("钩子类库")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"_2-9-配置类库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-9-配置类库"}},[t._v("#")]),t._v(" 2.9 配置类库")]),t._v(" "),s("p",[t._v("会有专门的章节学习，见"),s("a",{attrs:{href:"/php/ci3/config_lib"}},[t._v("配置类库")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"_2-10-加载附加函数库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-10-加载附加函数库"}},[t._v("#")]),t._v(" 2.10 加载附加函数库")]),t._v(" "),s("p",[t._v("这部分的函数库，是专门用来处理特殊的情况的，和上述的系统函数库其实一样，都是函数库，都加载了。")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require_once")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BASEPATH")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'core/compat/mbstring.php'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require_once")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BASEPATH")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'core/compat/hash.php'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require_once")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BASEPATH")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'core/compat/password.php'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require_once")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BASEPATH")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'core/compat/standard.php'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("em",[t._v("适当了解其中的函数，以后如果遇到可以使用的场景可直接使用，或者参考后自己编写功能函数。")])]),t._v(" "),s("h3",{attrs:{id:"_2-11-编码类库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-11-编码类库"}},[t._v("#")]),t._v(" 2.11 编码类库")]),t._v(" "),s("p",[t._v("会有专门的章节学习，见"),s("a",{attrs:{href:"/php/ci3/utf8_lib"}},[t._v("编码类库")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"_2-12-请求地址类库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-12-请求地址类库"}},[t._v("#")]),t._v(" 2.12 请求地址类库")]),t._v(" "),s("p",[t._v("会有专门的章节学习，见"),s("a",{attrs:{href:"/php/ci3/uri_lib"}},[t._v("请求地址类库")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"_2-13-路由类库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-13-路由类库"}},[t._v("#")]),t._v(" 2.13 路由类库")]),t._v(" "),s("p",[t._v("会有专门的章节学习，见"),s("a",{attrs:{href:"/php/ci3/router_lib"}},[t._v("路由类库")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"_2-14-输出类库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-14-输出类库"}},[t._v("#")]),t._v(" 2.14 输出类库")]),t._v(" "),s("p",[t._v("会有专门的章节学习，见"),s("a",{attrs:{href:"/php/ci3/output_lib"}},[t._v("输出类库")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"_2-15-安全处理类库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-15-安全处理类库"}},[t._v("#")]),t._v(" 2.15 安全处理类库")]),t._v(" "),s("p",[t._v("会有专门的章节学习，见"),s("a",{attrs:{href:"/php/ci3/security_lib"}},[t._v("安全处理类库")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"_2-16-输入类库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-16-输入类库"}},[t._v("#")]),t._v(" 2.16 输入类库")]),t._v(" "),s("p",[t._v("会有专门的章节学习，见"),s("a",{attrs:{href:"/php/ci3/input_lib"}},[t._v("输入类库")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"_2-17-语言类库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-17-语言类库"}},[t._v("#")]),t._v(" 2.17 语言类库")]),t._v(" "),s("p",[t._v("会有专门的章节学习，见"),s("a",{attrs:{href:"/php/ci3/lang_lib"}},[t._v("语言类库")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"_2-18-载入基础控制器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-18-载入基础控制器"}},[t._v("#")]),t._v(" 2.18 载入基础控制器")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require_once")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BASEPATH")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'core/Controller.php'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("这个控制器，应该是所有开发中控制器的最最顶层的基础类库，后面在 "),s("a",{attrs:{href:"/php/ci3/controller"}},[t._v("控制器")]),t._v("中专门学习。")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("p",[t._v("如果遇到这样的场景，我的项目中有不同的业务场景，比如一种是需要自有系统用户认证的，还有一种是其他平台用户认证的，显然这个时候应该有两种基础类库供对应控制器继承，（这里提前说）如果根据框架提供的扩展基础控制器、复写基础控制器，这样也只能实现一种平台的基础控制器，另一种还是无法实现。"),s("br"),t._v("\n因此可以参考这里的源码方式，修改源码，在这里新增载入一个自定义的基础控制器，有更多的上述情况同理。")])]),t._v(" "),s("h3",{attrs:{id:"_2-19-定义函数-引用整个-ci-系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-19-定义函数-引用整个-ci-系统"}},[t._v("#")]),t._v(" 2.19 定义函数，引用整个 "),s("code",[t._v("CI")]),t._v(" 系统")]),t._v(" "),s("p",[t._v("这样的场景，我们些了一个自定义的类库，它并不继承基础控制器，但是在其中，需要使用 "),s("code",[t._v("CI")]),t._v(" 的功能，比如数据库操作，比如加载类库等等，此时就需要一个方式来引用整个 "),s("code",[t._v("CI")]),t._v(" 系统。")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_instance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("CI_Controller")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_instance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("记得上一步“载入基础控制器”吗，那里载入的控制器名称就是 "),s("code",[t._v("CI_Controller")]),t._v("，并且其中有一个方法 "),s("code",[t._v("get_instance()")]),t._v("。如此，在其他任何与 "),s("code",[t._v("CI")]),t._v(" 没有关联的地方，都可以：")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ci")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_instance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ci")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("load")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("model")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xxx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ci")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("db")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("trans_start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-20-载入扩展基础控制器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-20-载入扩展基础控制器"}},[t._v("#")]),t._v(" 2.20 载入扩展基础控制器")]),t._v(" "),s("p",[t._v("上面载入的基础控制器，仅仅是将这个文件载入到内存中；而还可以载入一定规则的扩展基础控制器，这里载入的是："),s("code",[t._v("APPPATH . 'core/' . $CFG->config['subclass_prefix'] . 'Controller.php'")]),t._v("。"),s("br"),t._v("\n其实说白了，默认的情况下配置中的 "),s("code",[t._v("subclass_prefix")]),t._v(" 为 "),s("code",[t._v("MY_")]),t._v("，并且注意看路径的开头，是 "),s("code",[t._v("APPPATH")]),t._v("，因此可以在应用目录下的 "),s("code",[t._v("core")]),t._v(" 目录下，书写一个类库，命名为  "),s("code",[t._v("MY_Controller")]),t._v("，并且继承 "),s("code",[t._v("CI_Controller")]),t._v("，如此可以扩展基础控制器功能。")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// application/core/MY_Controller.php")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name-definition class-name"}},[t._v("MY_Controller")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CI_Controller")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("em",[t._v("这里了解这个知识点，在后面会专门学习扩展、复写基础控制器，基础模型等。")])]),t._v(" "),s("h3",{attrs:{id:"_2-21-路由分发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-21-路由分发"}},[t._v("#")]),t._v(" 2.21 路由分发")]),t._v(" "),s("p",[t._v("基于上面加载的一些类库，将当前请求地址解析，得到最终会分发到的控制器、方法。"),s("br"),t._v("\n然后载入该文件，并回调其解析的方法。")]),t._v(" "),s("h2",{attrs:{id:"_3-综述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-综述"}},[t._v("#")]),t._v(" 3. 综述")]),t._v(" "),s("p",[t._v("从上述的一些简单总结中可以看到，就这样一个设计，就可以完全实现项目的功能，并且它还是可扩展的，还是这么的轻量。"),s("br"),t._v("\n虽然大部分的类库，都是懒加载的，减轻了服务器压力，但确实很多东西都需要手动处理确实也比较麻烦。"),s("br"),t._v("\n总之，如果想要性能极高和足够简单和轻量，这个框架没问题；如果是想要功能大而全的，很多东西都是约定好的，直接配置或简单指定就可实现的，可以使用现代化的框架，比如 "),s("code",[t._v("Laravel")]),t._v("。")])])}),[],!1,null,null,null);s.default=n.exports}}]);