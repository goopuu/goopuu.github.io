(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{306:function(t,a,s){"use strict";s.r(a);var _=s(14),e=Object(_.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-git-仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-git-仓库"}},[t._v("#")]),t._v(" 1 "),a("code",[t._v("git")]),t._v(" 仓库")]),t._v(" "),a("h3",{attrs:{id:"_1-1-什么是-git-仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-什么是-git-仓库"}},[t._v("#")]),t._v(" 1.1 什么是 "),a("code",[t._v("git")]),t._v(" 仓库")]),t._v(" "),a("p",[t._v("简单地说，"),a("code",[t._v("git")]),t._v(" 仓库就是被 "),a("code",[t._v("git")]),t._v(" 管理的目录。")]),t._v(" "),a("h3",{attrs:{id:"_1-2-本地仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-本地仓库"}},[t._v("#")]),t._v(" 1.2 本地仓库")]),t._v(" "),a("p",[t._v("既然每个被 "),a("code",[t._v("git")]),t._v(" 管理的目录都是一个仓库，那么对每个客户端来说，他们本地也是一个仓库。"),a("br"),t._v("\n客户端的仓库，通常称之为“本地仓库”。")]),t._v(" "),a("h3",{attrs:{id:"_1-3-远程仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-远程仓库"}},[t._v("#")]),t._v(" 1.3 远程仓库")]),t._v(" "),a("p",[t._v("虽然 "),a("code",[t._v("git")]),t._v(" 是分布式的版本控制系统，但是之前也说了，一般也会做一个中央服务器支持各个客户端的交互，这个中央服务器是一个特殊的客户端。"),a("br"),t._v("\n中央服务器所在的客户端仓库，通常称之为“远程仓库”。")]),t._v(" "),a("h3",{attrs:{id:"_1-4-各个仓库之间的交互"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-各个仓库之间的交互"}},[t._v("#")]),t._v(" 1.4 各个仓库之间的交互")]),t._v(" "),a("p",[t._v("通常的交互中，是远程仓库中初始化项目，然后本地仓库中拉取、克隆项目，然后各个本地仓库进行修改、提交、推送到远程仓库，依次循环实现版本管理。")]),t._v(" "),a("h2",{attrs:{id:"_2-创建仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建仓库"}},[t._v("#")]),t._v(" 2 创建仓库")]),t._v(" "),a("h3",{attrs:{id:"_2-1-初始化目录为仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-初始化目录为仓库"}},[t._v("#")]),t._v(" 2.1 初始化目录为仓库")]),t._v(" "),a("p",[t._v("不管是本地客户端，还是中央服务器的客户端，可以直接初始化一个目录为仓库：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入某个目录后")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n")])])]),a("p",[t._v("此时会在该目录下自动创建 "),a("code",[t._v(".git")]),t._v(" 目录（"),a("code",[t._v("Windows")]),t._v("系统需要开启查看隐藏文件才能看到），这个目录就是 "),a("code",[t._v("git")]),t._v(" 版本控制系统。")]),t._v(" "),a("h3",{attrs:{id:"_2-2-克隆远程项目在本地形成仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-克隆远程项目在本地形成仓库"}},[t._v("#")]),t._v(" 2.2 克隆远程项目在本地形成仓库")]),t._v(" "),a("p",[t._v("如果需要对一个已存在的仓库进行本地管理，那么可以克隆那个仓库（可以是中央服务器，可以是任意一个客户端），则在本地自动生成一个仓库：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone xxx \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone xxx local-name\n")])])]),a("p",[t._v("关于克隆，需要一些注意（其实就是授权问题），这里后续在使用 "),a("code",[t._v("github")]),t._v(" 的时候会介绍。")])])}),[],!1,null,null,null);a.default=e.exports}}]);